<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Days_Of_Cpp on The Lone Coder Aju Blog</title>
    <link>https://Cyber-Aju.github.io/demo/categories/days_of_cpp/</link>
    <description>Recent content in Days_Of_Cpp on The Lone Coder Aju Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://Cyber-Aju.github.io/demo/categories/days_of_cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learnings of the Day 11/12</title>
      <link>https://Cyber-Aju.github.io/demo/posts/learning-of-the-day-111223/</link>
      <pubDate>Mon, 11 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Cyber-Aju.github.io/demo/posts/learning-of-the-day-111223/</guid>
      <description>Problem solving&amp;rsquo;s 1. Repeated Substring Pattern leetcode
Code: bool repeatedSubstringPattern(char s[]){ char b[50]; for(int i=0;i&amp;lt;50;i++) { b[i]=0; } for(int i=0;s[i];i++) { int k=s[i]-&amp;#39;a&amp;#39;; b[k]++; } for(int i=0;i&amp;lt;50;i++) { if(b[i]!=0) { int a=b[1]; while(b[i]==a) { return true; } } } return false; } Modifications: Then corrected version of code in a previous response.
bool repeatedSubstringPattern(char s[]) { int len = strlen(s); for (int i = 1; i &amp;lt;= len / 2; i++) { if (len % i == 0) { int numRepeats = len / i; bool isRepeated = true; for (int j = i; j &amp;lt; len; j++) { if (s[j] !</description>
    </item>
    
    <item>
      <title>Learnings of the Day 05/12</title>
      <link>https://Cyber-Aju.github.io/demo/posts/learning-of-the-day-051223/</link>
      <pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Cyber-Aju.github.io/demo/posts/learning-of-the-day-051223/</guid>
      <description>Learnings of the Day 05/12 Learnings 1. Mirror of a Binary Tree Description: Explored the concept of mirroring a binary tree. Code Example: isMirror function checks if a tree is a mirror of itself. 2. Depth of a Binary Tree Description: Calculated the depth (height) of a binary tree. Code Example: Recursive approach to find the maximum depth of a tree. 3. Minimum Depth of a Binary Tree Description: Determined the minimum depth of a binary tree.</description>
    </item>
    
    <item>
      <title>Learnings of the Day 04/12</title>
      <link>https://Cyber-Aju.github.io/demo/posts/learining-of-the-day-041223/</link>
      <pubDate>Mon, 04 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Cyber-Aju.github.io/demo/posts/learining-of-the-day-041223/</guid>
      <description>Learnings of the Day 04/12 Learnings Today Binary Trees Operations: Implemented various operations like insertion, search, and traversal (BFS, DFS). Recursive Algorithms: Explored recursive approaches for tree-related problems, enhancing understanding. Error Handling: Encountered and resolved type mismatch issues during implementations. Challenges Faced Pointer Understanding: Initially struggled with the distinction between &amp;lsquo;-&amp;gt;&amp;rsquo; and &amp;lsquo;.&amp;rsquo; when dealing with pointers. Overcoming Challenges Type Handling: Learned to handle type mismatches through explicit type conversions. Debugging Approach: Enhanced debugging skills to identify and resolve conversion errors effectively.</description>
    </item>
    
    <item>
      <title>Learnings of the Day 03/12</title>
      <link>https://Cyber-Aju.github.io/demo/posts/learining-of-the-day-031223/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://Cyber-Aju.github.io/demo/posts/learining-of-the-day-031223/</guid>
      <description>A Journey into Hugo: Overcoming Challenges, Embracing New Learnings Learnings of the Day Today has been an exciting day filled with valuable lessons and new discoveries. The primary focus was on setting up a blog using Hugo, a static site generator, and the challenges encountered along the way.
1. Hugo Basics Learning the basics of Hugo, such as installing the tool, creating a new site, and understanding the structure of the configuration files, laid a strong foundation for the day&amp;rsquo;s journey.</description>
    </item>
    
  </channel>
</rss>
